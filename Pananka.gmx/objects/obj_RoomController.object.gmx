<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INIT ROOM

globalvar
mouseActive, checkupOnRoomSprites, inspectBlocksFallen, hasBlocksSameColor, 
gravity__, room_creation;

mouseActive = false;
checkupOnRoomSprites = false;
inspectBlocksFallen = false;
hasBlocksSameColor = false;
gravity__ = false;
room_creation = false;

countStep = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>inspectBlocksFallen</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inspect Blocks Fallen

var foundFallingBlock = false;
var i;
i = 0;
while (i &lt; instance_number(oBlock))
{
    var block = instance_find(oBlock, i);
   
    if (block.vspeed != 0) {
        foundFallingBlock = true;
        break;
    }
    i++;
}

/*
 * if didn't found any block still falling 
 * then do inspectBlocksToDestroy again
 */
if (!foundFallingBlock)
    {
    show_debug_message("Todos os blocos já caíram.");
    removeInspectedColor();
    gravity__ = false;
    inspectBlocksFallen = false;
    checkupOnRoomSprites = true;
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>checkupOnRoomSprites</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///All blocks were inspected (?)

var foundNotInspected = false;

//Verify if all blocks where inspected by color
for (var i = 0; i &lt; instance_number(oBlock); i++) {
    var block = instance_find(oBlock, i);
    if (block.inspectedColor == false) {
        foundNotInspected = true;
        break;
    }
}

if (!foundNotInspected) {
    /*
     * if all blocks where inspected and aren't any blocks 
     * with the same color, the player, must go on
     */
    if !hasBlocksSameColor
    {
    removeInspectedColor();
    mouseActive = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go fit oPlayer
if (hasBlocksSameColor) {

    mouse_clear(mb_any);
    mouseActive = false;

    if (object_exists(obj_Player)) {
        with (obj_Player) {
            // do this if only one time
            if state == playerstate.MOVING and countStep == 0 {
                show_debug_message("Vai fazer fit do player");
                goFit = true;
                countStep = 1;
            }
            // move on
            if state == playerstate.STATIC {
                show_debug_message("Completou o fit do player e vai reiniciar o contador countStep.");
                countStep = 0;
              
                /*
                 * Destroy all the blocks marked to be destroyed
                 *
                 */  
                for (var i = instance_number(oBlock)-1; i &gt;= 0; i--) {
                    var block = instance_find(oBlock, i);
                    if (block.autoDestroy) {
                        if (instance_position(block.x, block.y, obj_Player)) {
                            //
                            // the player has special powers
                        }
                        else {
                            with block {
                                instance_destroy();
                            }
                        }
                    } 
                }
                gravity__ = true;
                inspectBlocksFallen = true;
                hasBlocksSameColor = false;
                checkupOnRoomSprites = false;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Visible

if !mouseActive
{
    if ( room_creation and instance_exists(prt_Q) ) {
        for (var i = 0; i &lt; instance_number(oParent); i++) {
            var object = instance_find(oParent, i);
            object.visible = true;
        }
        mouseActive = true;
    }
    else {
        var foundNotPlaced = false;
        for (var i = 0; i &lt; instance_number(prt_Q); i++) {
            var objectQ = instance_find(prt_Q, i);
            if (objectQ.y &lt; objectQ.destiny_y) {
                foundNotPlaced = true;
                break;
            }
        }
        if ( !foundNotPlaced ) {
            room_creation = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///for testing
var underlying_object = instance_position(mouse_x, mouse_y, all);
if underlying_object {
    with underlying_object {
        show_debug_message("solid = " + string(solid));
        show_debug_message("gravity__ = " + string(gravity__));
        //image_alpha = 0.5;
    }
}
show_debug_message("underlying_object = " + string(underlying_object));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
