<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INIT ROOM

globalvar
mouseActive, checkupOnRoomSprites, inspectBlocksFallen, hasBlocksSameColor, 
gravity__, room_creation, icarusCreated;

mouseActive = false;
checkupOnRoomSprites = false;
inspectBlocksFallen = false;
hasBlocksSameColor = false;
gravity__ = false;
room_creation = false;
icarusCreated = false;

inspectBlockToDestroy = false;
countStep = 0;
animationDestroyBlocks = false;
blocksToDestroy = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation is done
animationDestroyBlocks = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>inspectBlocksFallen</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inspect Blocks Fallen

var foundFallingBlock = false;
var i;
i = 0;
while (i &lt; instance_number(oBlock))
{
    var block = instance_find(oBlock, i);
   
    if (block.vspeed != 0) {
        foundFallingBlock = true;
        break;
    }
    i++;
}

/*
 * if didn't found any block still falling 
 * then do inspectBlocksToDestroy again
 */
if (!foundFallingBlock)
    {
    show_debug_message("Todos os blocos já caíram.");
    removeInspectedColor();
    gravity__ = false;
    inspectBlocksFallen = false;
    checkupOnRoomSprites = true;
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>checkupOnRoomSprites</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///All blocks were inspected (?)

var foundNotInspected = false;

//Verify if all blocks where inspected by color
for (var i = 0; i &lt; instance_number(oBlock); i++) {
    var block = instance_find(oBlock, i);
    if (block.inspectedColor == false) {
        foundNotInspected = true;
        break;
    }
}

if (!foundNotInspected) {

    /*
     * if it ends without having to destroy more blocks
     * then finish all evaluation and go on with the game
     */
    if !hasBlocksSameColor
        {
        removeInspectedColor();
        mouseActive = true;
        checkupOnRoomSprites = false;
        }
    else 
    {
        // stop (go fit) the player and proceed to destruction
        inspectBlockToDestroy = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>inspectBlockToDestroy</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go fit oPlayer
if (hasBlocksSameColor) {

    mouse_clear(mb_any);
    mouseActive = false;
    inspectBlockToDestroy = false;

    if (object_exists(obj_Player)) {
        var player = instance_position(obj_Player.x, obj_Player.y, obj_Player);
        show_debug_message("PLAYER = " + string(player));
        show_debug_message("obj_Player.id = " + string(obj_Player.id));
        //with (obj_Player) {
            // do this if only one time
            if player.state == playerstate.MOVING and countStep == 0 {
                show_debug_message("Vai fazer fit do player");
                player.goFit = true;
                countStep = 1
            }
            
            if player.state == playerstate.STATIC and countStep == 1 {
                show_debug_message("Vai accionar o alarme");
                alarm[0] = 20; // animationDestroyBlocks duration
                countStep = 2;
                animationDestroyBlocks = true;
                show_debug_message("Accionou o alarme? = "+  string(alarm[0]));
            }
                    
            // move on
            if player.state == playerstate.STATIC and !animationDestroyBlocks and countStep == 2 {
                show_debug_message("Completou o fit do player e vai reiniciar o contador countStep.");
                countStep = 0;
              
                /*
                 * Destroy all the blocks marked to be destroyed
                 *
                 */  
                 /*
                for (var i = instance_number(oBlock)-1; i &gt;= 0; i--) {
                    var block = instance_find(oBlock, i);
                    if ( block.matched ) {
                        if (instance_position(block.x, block.y, obj_Player)) {
                            // the player has special powers
                        }
                        else {
                            block.autoDestroy = true;
                        }
                    }
                }*/
                if ( blocksToDestroy != noone ) {
                    for (var i = 0; i &lt; ds_list_size(blocksToDestroy); i++ ) {
                        var block = ds_list_find_value(blocksToDestroy, i);
                        if (instance_position(block.x, block.y, obj_Player)) {
                            // the player has special powers
                        }
                        else {
                            block.autoDestroy = true;
                        }
                    }
                }
                blocksToDestroy = noone;
                gravity__ = true;
                inspectBlocksFallen = true;
                hasBlocksSameColor = false;
                checkupOnRoomSprites = false;
            }
        //}

    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///All Blocks Visible

if !mouseActive
{
    if ( room_creation and instance_exists(prt_Q) ) {
        for (var i = 0; i &lt; instance_number(oParent); i++) {
            var object = instance_find(oParent, i);
            object.visible = true;
        }
        mouseActive = true;
    }
    else {
        var foundNotPlaced = false;
        for (var i = 0; i &lt; instance_number(prt_Q); i++) {
            var objectQ = instance_find(prt_Q, i);
            if (objectQ.y &lt; objectQ.destiny_y) {
                foundNotPlaced = true;
                break;
            }
        }
        if ( !foundNotPlaced ) {
            room_creation = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///test alarm

if alarm[0] != -1 {
    show_debug_message("O alarm vale = " + string(alarm[0]));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///for testing
var underlying_object = instance_position(mouse_x, mouse_y, all);
if underlying_object {
    with underlying_object {
        show_debug_message("solid = " + string(underlying_object.solid));
        show_debug_message("gravity__ = " + string(gravity__));
        //image_alpha = 0.5;
    }
    
    // if its a block
    if underlying_object == instance_position(mouse_x, mouse_y, oBlock) {
        show_debug_message("matched? = " + string(underlying_object.matched));
        show_debug_message("x = " + string(underlying_object.x));
        show_debug_message("y = " + string(underlying_object.y));
        show_debug_message("last_fit_x = " + string(underlying_object.last_fit_x));
        show_debug_message("last_fit_y = " + string(underlying_object.last_fit_y));
        show_debug_message("dist_pos_x = " + string(underlying_object.dist_pos_x));
        show_debug_message("dist_pos_y = " + string(underlying_object.dist_pos_y));
    }
    
    // it's a portal
    if underlying_object == instance_position(mouse_x, mouse_y,obj_portal) {
        show_debug_message("It's a portal with id = " + string(underlying_object.id));
        show_debug_message("left = " + string(underlying_object.left));
        show_debug_message("right = " + string(underlying_object.right));
        show_debug_message("up = " + string(underlying_object.up));
        show_debug_message("down = " + string(underlying_object.down));
    }
}

show_debug_message("underlying_object = " + string(underlying_object));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Room execution
show_debug_message("Room Controller Id = " + string(self.id));

if room_get_name(room) == "test_5_Room" {
    var portal_1 = instance_position(144,384,obj_portal);
    var portal_2 = instance_position(336,240,obj_portal);
    if (portal_1 and portal_2) {
        portal_1.terminal = portal_2;
        portal_2.terminal = portal_1;
    }
}
if room_get_name(room) == "test_6_Room" {
    var portal_1 = instance_position(144,384,obj_portal);
    var portal_2 = instance_position(336,240,obj_portal);
    if (portal_1 and portal_2) {
        portal_1.terminal = portal_2;
        portal_2.terminal = portal_1;
    }
}
if room_get_name(room) == "test_7_Room" {
    var portal_1 = instance_position(144,384,obj_portal);
    var portal_2 = instance_position(336,240,obj_portal);
    var portal_3 = instance_position(528,192,obj_portal);
    if (portal_1 and portal_2 and portal_3) {
        portal_1.terminal = portal_2;
        portal_2.terminal = portal_3;
        portal_3.terminal = portal_1;
    }
}
if room_get_name(room) == "test_8_Room" {
    var portal_1 = instance_position(144,288,obj_portal);
    var portal_2 = instance_position(336,240,obj_portal);
    if (portal_1 and portal_2) {
        portal_1.terminal = portal_2;
        portal_2.terminal = portal_1;
    }
}
if room_get_name(room) == "test_10_Room" {
    var portal_1 = instance_position(240,288,obj_portal);
    var portal_2 = instance_position(528,240,obj_portal);
    if (portal_1 and portal_2) {
        portal_1.terminal = portal_2;
        portal_2.terminal = portal_1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if alarm[0] &gt; 0 {
    show_debug_message("O alarm[0] é = " + string(alarm[0]));
    if ( blocksToDestroy == noone ) {
        show_debug_message("Vai encher a lista de blocos para destruír");
        blocksToDestroy = ds_list_create();
        for (var i = instance_number(oBlock)-1; i &gt;= 0; i--) {
        var block = instance_find(oBlock, i);
            if ( block.matched ) {/*
                if (instance_position(block.x, block.y, obj_Player)) {
                    // the player has special powers
                }
                else {*/
                    // add block to the list for animation
                    ds_list_add(blocksToDestroy, block);
                }
            }
        }
    //}
    show_debug_message("A lista ficou com tamanho = " + string(ds_list_size(blocksToDestroy)));
    
    for (var i = 0; i &lt; ds_list_size(blocksToDestroy); i++ ) {
        var block = ds_list_find_value(blocksToDestroy, i);
        
        if (alarm[0] mod 2 == 0) {
            draw_rectangle_color(block.x-48, block.y-48, block.x+48, block.y+48, c_lime, c_lime, c_lime, c_lime, false); 
        } else {
            draw_rectangle_color(block.x-48, block.y-48, block.x+48, block.y+48, c_white, c_white, c_white, c_white, false); 
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
