<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_portal</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_SpaceMove</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init

/* When the room starts, this could not be null. */
terminal = noone;
otherBlock = noone;

/* comming block direction */
right = 0;
left = 0;
up = 0;
down = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get Other Ends Block

if ( left ) {
    otherBlock = instance_position(terminal.x + 96, terminal.y, obj_SpaceMove);
    show_debug_message("Other Block is = " + string(otherBlock));
}
if ( right ) {
    otherBlock = instance_position(terminal.x - 96, terminal.y, obj_SpaceMove);
}
if ( up ) {
    otherBlock = instance_position(terminal.x, terminal.y + 96, obj_SpaceMove);
}
if ( down ) {
    otherBlock = instance_position(terminal.x, terminal.y - 96, obj_SpaceMove);
}

if ( right | left | up | down ) {
    if ( !otherBlock ) 
    {
        // set player back!
        with ( obj_Player ) 
        {
            show_debug_message("BBBAAAANNNGGG!!!");
            goFit = true;
        }
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///When player's inside

var inside = false;

if collision_line(self.x, self.y, self.x-48, self.y, obj_Player.id, false, false) {
    if  ( right | left | up | down ) == 0
    { 
        show_debug_message("Left!");
        left = 1;
    }
}
else if collision_line(self.x, self.y, self.x+48, self.y, obj_Player.id, false, false) {
    if  ( right | left | up | down ) == 0
    { 
        show_debug_message("right!");
        right = 1;
    }
}
else if collision_line(self.x, self.y, self.x, self.y-48, obj_Player.id, false, false) {
    if  ( right | left | up | down ) == 0
    { 
        show_debug_message("up!");
        up = 1;
    }
}
else if collision_line(self.x, self.y, self.x, self.y+48, obj_Player.id, false, false) {
    if  ( right | left | up | down ) == 0
    { 
        show_debug_message("down!");
        down = 1;
    }
}
else 
    {
        if  ( right | left | up | down ) != 0 {
            show_debug_message("Reset to ALL!!");
            right = 0;
            left = 0;
            up = 0;
            down = 0;
        }
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move other block
if ( otherBlock ) {

    var dif = 0;

    if ( left ) {
        dif = (obj_Player.x + obj_Player.sprite_width/2) - (self.x - self.sprite_width/2);
        otherBlock.x = otherBlock.last_fit_x - dif;
    }
    else if ( right ) {
        dif = (self.x - self.sprite_width/2) - (obj_Player.x + obj_Player.sprite_width/2);
        otherBlock.x = otherBlock.last_fit_x + dif;
    }
    else if ( up ) {
        dif = (obj_Player.y + obj_Player.sprite_height/2) - (self.y - self.sprite_height/2);
        otherBlock.y = otherBlock.last_fit_y - dif;
    }
    else if ( down ) {
        dif = (self.y - self.sprite_height/2) - (obj_Player.y + obj_Player.sprite_height/2);
        otherBlock.y = otherBlock.last_fit_y + dif;
    }
    else {
        otherBlock.x = otherBlock.last_fit_x;
        otherBlock.y = otherBlock.last_fit_y;
        otherBlock = noone;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
