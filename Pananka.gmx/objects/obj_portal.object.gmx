<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_portal</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_SpaceMove</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init

/* When the room starts, this could not be null. */
terminal = noone;
otherBlock = noone;
foundOtherBlock = false;

/* comming block direction */
right = 0;
left = 0;
up = 0;
down = 0;

playerInsidePortal = false;
teleporting = false;

originalPlaceOtherBlock_X = noone;
originalPlaceOtherBlock_Y = noone;
originalPlacePlayer_X = noone;
originalPlacePlayer_Y = noone;

surround = noone;

isDoublePlayer = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>!playerInsidePortal &amp;&amp; !teleporting</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get Other Block

if !foundOtherBlock
{
    if ( left ) {
        otherBlock = instance_position(terminal.x + 96, terminal.y, obj_SpaceMove);
        foundOtherBlock = true;
        show_debug_message("Other Block in right is = " + string(otherBlock));
    }
    else if ( right ) {
        otherBlock = instance_position(terminal.x - 96, terminal.y, obj_SpaceMove);
        foundOtherBlock = true;
        show_debug_message("Other Block in left is = " + string(otherBlock));
    }
    else if ( up ) {
        otherBlock = instance_position(terminal.x, terminal.y + 96, obj_SpaceMove);
        foundOtherBlock = true;
        show_debug_message("Other Block in down is = " + string(otherBlock));
    }
    else if ( down ) {
        otherBlock = instance_position(terminal.x, terminal.y - 96, obj_SpaceMove);
        foundOtherBlock = true;
        show_debug_message("Other Block in up is = " + string(otherBlock));
    }
}

if otherBlock and otherBlock == instance_position(otherBlock.x, otherBlock.y, obj_Player) {
        otherBlock = createDoublePlayer(obj_Player.id);
        isDoublePlayer = true;
}

if ( right != 0 or left != 0 or  up != 0 or down != 0 ) {
    if ( !otherBlock ) 
    {
        foundOtherBlock = false;
        if obj_Player.x != obj_Player.last_fit_x or obj_Player.y != obj_Player.last_fit_y {
            // set player back!
            with ( obj_Player ) 
            {
                show_debug_message("BBBAAAANNNGGG!!!");
                global.mouseActive = false;
                goFit = true;
            }
        }
    }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///When player's inside

if self.y == obj_Player.y and self.x - obj_Player.x &lt; obj_Player.sprite_width and self.x - obj_Player.x &gt; 0 {
    if ( right == 0 and left == 0 and up == 0 and down == 0 ) 
    { 
        show_debug_message("Left!");
        left = 1;
    }
}
else if self.y == obj_Player.y and self.x - obj_Player.x &gt; -obj_Player.sprite_width and self.x - obj_Player.x &lt; 0 {
    if ( right == 0 and left == 0 and up == 0 and down == 0 ) 
    { 
        show_debug_message("right!");
        right = 1;
    }
}
else if self.x == obj_Player.x and self.y - obj_Player.y &lt; obj_Player.sprite_height and self.y - obj_Player.y &gt; 0 {
    if ( right == 0 and left == 0 and up == 0 and down == 0 ) 
    { 
        show_debug_message("up!");
        up = 1;
    }
}
else if self.x == obj_Player.x and self.y - obj_Player.y &gt; -obj_Player.sprite_width and self.y - obj_Player.y &lt; 0 {
    if ( right == 0 and left == 0 and up == 0 and down == 0 ) 
    { 
        show_debug_message("down!");
        down = 1;
    }
}
else 
    {
        if  ( right != 0 or left != 0 or up != 0 or down != 0 ) {
            show_debug_message("Reset to ALL!!");
            right = 0;
            left = 0;
            up = 0;
            down = 0;
        }
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move other block
if ( otherBlock ) {

    var dif = 0;

    if ( left ) {
        dif = (obj_Player.x + obj_Player.sprite_width/2) - (self.x - self.sprite_width/2);
        otherBlock.x = otherBlock.last_fit_x - dif;
    }
    else if ( right ) {
        dif = (self.x + self.sprite_width/2) - (obj_Player.x - obj_Player.sprite_width/2);
        otherBlock.x = otherBlock.last_fit_x + dif;
    }
    else if ( up ) {
        dif = (obj_Player.y + obj_Player.sprite_height/2) - (self.y - self.sprite_height/2);
        otherBlock.y = otherBlock.last_fit_y - dif;
    }
    else if ( down ) {
        dif = (self.y + self.sprite_height/2) - (obj_Player.y - obj_Player.sprite_height/2);
        otherBlock.y = otherBlock.last_fit_y + dif;
    }
    else {
        show_debug_message("otherBlock " + string(otherBlock) + " FITED!!");
        otherBlock.x = otherBlock.last_fit_x;
        otherBlock.y = otherBlock.last_fit_y;
        if ( isDoublePlayer ) {
            // o buplo do player é destruído
            with ( otherBlock ) 
                {
                instance_destroy();
                }
            isDoublePlayer = false;  
        }
        otherBlock = noone;
        foundOtherBlock = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Push Player Inside

if self.y == obj_Player.y and abs(self.x - obj_Player.x) &lt; 48 {
    if (otherBlock)
    {
    global.mouseActive = false;
    playerInsidePortal = true;
    }
}
else if self.x == obj_Player.x and  abs(self.y - obj_Player.y) &lt; 48 {
    if (otherBlock)
    {
    global.mouseActive = false;
    playerInsidePortal = true;
    }
}
 
if playerInsidePortal {
    // save original places from each block
    originalPlaceOtherBlock_X = otherBlock.last_fit_x;
    originalPlaceOtherBlock_Y = otherBlock.last_fit_y;
    originalPlacePlayer_X = obj_Player.last_fit_x;
    originalPlacePlayer_Y = obj_Player.last_fit_y;

    // reset player movement variables
    obj_Player.x = self.x;
    obj_Player.y = self.y;
    obj_Player.state = playerstate.STATIC;
    
    otherBlock.x = terminal.x;
    otherBlock.y = terminal.y;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>playerInsidePortal</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Teleport

// save positions inside portal
var temp_otherBlock_x = otherBlock.x;
var temp_otherBlock_y = otherBlock.y;

var temp_player_x = obj_Player.x;
var temp_player_y = obj_Player.y;

///* teleportation *///
obj_Player.x = temp_otherBlock_x;
obj_Player.last_fit_x = obj_Player.x;
obj_Player.y = temp_otherBlock_y;
obj_Player.last_fit_y = obj_Player.y;


otherBlock.x = temp_player_x;
otherBlock.last_fit_x = otherBlock.x;
otherBlock.y = temp_player_y;
otherBlock.last_fit_y = otherBlock.y;

// set where each one should go
obj_Player.state = playerstate.ACTION;
obj_Player.dist_pos_x = originalPlaceOtherBlock_X;
obj_Player.dist_pos_y = originalPlaceOtherBlock_Y;
if obj_Player.x != originalPlaceOtherBlock_X {
    obj_Player.dir = directionEnum.XX;
}
else if obj_Player.y != originalPlaceOtherBlock_Y {
    obj_Player.dir = directionEnum.YY;
}
show_debug_message("obj_Player.x está em = " + string(obj_Player.x) + " e vai para " + string(obj_Player.dist_pos_x));
show_debug_message("obj_Player.y está em = " + string(obj_Player.y) + " e vai para " + string(obj_Player.dist_pos_y));
show_debug_message("obj_Player.last_fit_x = " + string(obj_Player.last_fit_x));
show_debug_message("obj_Player.last_fit_y = " + string(obj_Player.last_fit_y));
show_debug_message("com dir = " + string(obj_Player.dir));

otherBlock.state = blockstate.ACTION;
otherBlock.dist_pos_x = originalPlacePlayer_X;
otherBlock.dist_pos_y = originalPlacePlayer_Y;
if otherBlock.x != originalPlacePlayer_X {
    otherBlock.dirBlock = directionBlockEnum.XX;
}
else if otherBlock.y != originalPlacePlayer_Y {
    otherBlock.dirBlock = directionBlockEnum.YY;
}
show_debug_message("otherBlock.x está em = " + string(otherBlock.x) + " e vai para " + string(otherBlock.dist_pos_x));
show_debug_message("otherBlock.y está em = " + string(otherBlock.y) + " e vai para " + string(otherBlock.dist_pos_y));
show_debug_message("otherBlock.last_fit_x = " + string(otherBlock.last_fit_x));
show_debug_message("otherBlock.last_fit_y = " + string(otherBlock.last_fit_y));
show_debug_message("com dirBlock = " + string(otherBlock.dirBlock));

originalPlaceOtherBlock_X = noone;
originalPlaceOtherBlock_Y = noone;
originalPlacePlayer_X = noone;
originalPlacePlayer_Y = noone;

playerInsidePortal = false;

teleporting = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>teleporting</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Teleporting

if obj_Player.state == playerstate.STATIC
    {
    teleporting = false;
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Surround
if ( otherBlock and !surround ) {
    surround = instance_create(otherBlock.x, otherBlock.y, obj_surround);
    surround.depth = surround.depth - 1;
}

if ( otherBlock and surround ) {
    surround.x = otherBlock.x;
    surround.y = otherBlock.y;
}

if ( !otherBlock and surround ) {
    with surround
    {
    instance_destroy();
    }
    surround = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
