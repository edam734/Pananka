<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>destinyBlock = noone;

underlyingBlock = noone;

CATCH_SPEED = 1/5; // to accelerate, decreases the denominator

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Take Action
if ( destinyBlock )
{    
    if ( underlyingBlock.keptObject ) {
        underlyingBlock.keptObject = noone; // get out
    }
    var dist_x = ( destinyBlock.x - self.x ) * CATCH_SPEED;
    var dist_y = ( destinyBlock.y - self.y ) * CATCH_SPEED;
    
    if abs(destinyBlock.x - self.x) &lt; 15 {
        self.x = destinyBlock.x;
    } else {
        self.x += dist_x;
    }
    
    if abs(destinyBlock.y - self.y) &lt; 15 {
        self.y = destinyBlock.y;
    } else {
        self.y += dist_y;
    }
    self.depth = -999;
    show_debug_message("ainda n chegou ao destino");
    // Arrived
    if ( self.x == destinyBlock.x and self.y == destinyBlock.y ) {
        show_debug_message("JÃ¡ chegou ao destino");
        destinyBlock.keptObject = self.id;
        self.depth = destinyBlock.depth - 1;
        underlyingBlock = destinyBlock;
        // some animation
        
        destinyBlock = noone; // release variable
        
        // create animation
        var animation_1 = instance_create(underlyingBlock.x,underlyingBlock.y,oRingEffect1);
        var animation_2 = instance_create(underlyingBlock.x,underlyingBlock.y,oRingEffect2);
        animation_1.origin = self.id;
        animation_2.origin = self.id;
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Where am I ?

underlyingBlock = instance_position(x,y,oBlock);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
